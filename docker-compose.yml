version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: capacity-planner-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: capacity_planner
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-database.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - capacity-planner-network

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile.dev
    container_name: capacity-planner-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/capacity_planner
      PORT: 3000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: capacity_planner
    ports:
      - "3000:3000"
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - ./packages:/app/packages
      - ./nx.json:/app/nx.json
      - ./tsconfig.base.json:/app/tsconfig.base.json
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - /app/node_modules
      - /app/dist
    command: pnpm nx serve api-gateway
    networks:
      - capacity-planner-network

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: capacity-planner-web
    depends_on:
      - api-gateway
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
      WATCHPACK_POLLING: true
    ports:
      - "4200:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - ./nx.json:/app/nx.json
      - ./tsconfig.base.json:/app/tsconfig.base.json
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - /app/node_modules
      - /app/.next
    command: pnpm nx dev web
    networks:
      - capacity-planner-network

volumes:
  postgres_data:

networks:
  capacity-planner-network:
    driver: bridge