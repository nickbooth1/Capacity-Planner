name: Deploy to Staging

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '10.13.1'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

  deploy-database:
    name: Deploy Database Migrations
    needs: test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy database migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID
          supabase db push --include-all

  deploy-api:
    name: Deploy API to Railway
    needs: [test, deploy-database]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          railway up --service api-gateway --environment staging

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: [test, deploy-api]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.STAGING_API_URL }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
        run: pnpm nx build web

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}
          alias-domains: capacity-planner-staging.vercel.app

  health-check:
    name: Post-deployment Health Check
    needs: [deploy-database, deploy-api, deploy-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Check API Health
        run: |
          for i in {1..5}; do
            if curl -f https://capacity-planner-staging.railway.app/health; then
              echo "API is healthy"
              break
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done

      - name: Check Frontend Health
        run: |
          if curl -f https://capacity-planner-staging.vercel.app; then
            echo "Frontend is healthy"
          else
            echo "Frontend health check failed"
            exit 1
          fi

      - name: Send deployment notification
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Staging deployment completed successfully!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: ${{ secrets.SLACK_WEBHOOK != '' }}