apiVersion: v1
kind: Namespace
metadata:
  name: capacity-planner
  labels:
    name: capacity-planner
    version: v1.1.1.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assets-module
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
    feature: stand-capabilities
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: assets-module
  template:
    metadata:
      labels:
        app: assets-module
        version: v1.1.1.1
        feature: stand-capabilities
    spec:
      containers:
        - name: assets-module
          image: capacity-planner/assets-module:v1.1.1.1
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: 'production'
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: url
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: encryption-secrets
                  key: key
            - name: ENABLE_METRICS
              value: 'true'
            - name: ENABLE_HEALTH_CHECKS
              value: 'true'
            - name: CACHE_TTL
              value: '300'
            - name: VALIDATION_CACHE_SIZE
              value: '1000'
            - name: MAX_BULK_OPERATIONS
              value: '100'
          resources:
            requests:
              memory: '256Mi'
              cpu: '250m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: app-config
              mountPath: /app/config
              readOnly: true
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: app-config
          configMap:
            name: assets-module-config
        - name: logs
          emptyDir: {}
      imagePullSecrets:
        - name: registry-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: assets-module-service
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
spec:
  selector:
    app: assets-module
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: assets-module-ingress
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/rate-limit: '100'
    nginx.ingress.kubernetes.io/rate-limit-window: '1m'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - assets-api.capacity-planner.com
      secretName: assets-api-tls
  rules:
    - host: assets-api.capacity-planner.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: assets-module-service
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: assets-module-config
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
data:
  app.json: |
    {
      "name": "assets-module",
      "version": "v1.1.1.1",
      "features": {
        "standCapabilities": {
          "enabled": true,
          "version": "1.0.0",
          "validation": {
            "strictMode": false,
            "cacheEnabled": true,
            "icaoCompliance": true
          },
          "security": {
            "encryptionEnabled": true,
            "rlsEnabled": true,
            "auditEnabled": true
          },
          "monitoring": {
            "metricsEnabled": true,
            "healthChecksEnabled": true,
            "alertingEnabled": true
          }
        }
      },
      "database": {
        "maxConnections": 10,
        "connectionTimeout": 30000,
        "queryTimeout": 60000
      },
      "redis": {
        "maxConnections": 5,
        "connectionTimeout": 5000,
        "defaultTTL": 300
      },
      "api": {
        "rateLimit": {
          "windowMs": 60000,
          "max": 100
        },
        "cors": {
          "enabled": true,
          "origins": ["https://app.capacity-planner.com"]
        }
      },
      "logging": {
        "level": "info",
        "format": "json",
        "destination": "stdout"
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: database-secrets
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
type: Opaque
data:
  url: <base64-encoded-database-url>
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
type: Opaque
data:
  url: <base64-encoded-redis-url>
---
apiVersion: v1
kind: Secret
metadata:
  name: encryption-secrets
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
type: Opaque
data:
  key: <base64-encoded-encryption-key>
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: assets-module-hpa
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: assets-module
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: assets-module-pdb
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: assets-module
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: assets-module-network-policy
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
spec:
  podSelector:
    matchLabels:
      app: assets-module
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: database
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - namespaceSelector:
            matchLabels:
              name: redis
      ports:
        - protocol: TCP
          port: 6379
    - to: []
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: assets-module-sa
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: assets-module-role
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
rules:
  - apiGroups: ['']
    resources: ['configmaps', 'secrets']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['']
    resources: ['pods']
    verbs: ['get', 'list', 'watch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: assets-module-rolebinding
  namespace: capacity-planner
  labels:
    app: assets-module
    version: v1.1.1.1
subjects:
  - kind: ServiceAccount
    name: assets-module-sa
    namespace: capacity-planner
roleRef:
  kind: Role
  name: assets-module-role
  apiGroup: rbac.authorization.k8s.io
